# libs/common
#
# Common functions.
#
# Author: Jiajun Liu <jiajun@unitedstack.com>
#
source ${TOPDIR}/libs/git
source ${TOPDIR}/libs/rpm
#set -x

# Load project config
source_config() {
    local project=$1

    source "${TOPDIR}/projects/${project}/CONFIG"
}


# Get source code directory
# get_source_code_dir project
get_source_code_dir() {
    local project=$1

    echo "${TOPDIR}/projects/${project}/SRC"
}


# Fetch project source code
# fetch_source_code project
fetch_source_code() {
    local project=$1
    local srcdir=$(get_source_code_dir "${project}")

    ## update source code from git repository
    if [ ! -d "${srcdir}" ]; then
        mkdir -p "${srcdir}"
    fi
    if [ ! -d "${srcdir}/.git" ]; then
        git_clone "${GITURL}" "${srcdir}"
    fi
    git_fetch_tag  "${srcdir}"
    git_fetch_code "${srcdir}"
}


# Create project source code tarball
# create_source_code_tarball project
create_source_code_tarball() {
    local project=$1
    local type=${TYPE:-script}

    case $type in
        python)
            create_python_src_tarball ${project}
            ;;
        script)
            create_script_src_tarball ${project}
            ;;
        *)
            error "NOT supported package type: ${type}"
            exit
            ;;
    esac
}


# Build one project's all packages
build_one_project() {
    local project=$1
    local branch=$2
    local strategy=$3

    ## Change work directory
    pushd "${TOPDIR}/projects/${project}"
    source_config "${project}"
    ## Step 1: get source code tarball
    srcdir=$(get_source_code_dir "${project}")
    if [ -n "${GITURL}" ]; then
        fetch_source_code "${project}"
    fi
    if [ "tag" = "${strategy}" ]; then
        branch=$(get_latest_tag "${project}")
        git_update_branch "${srcdir}" "${branch}"
    else
        git_update_branch "${srcdir}" "${branch}"
    fi
    #create_source_code_tarball "${project}"
    ## Step 2: get latest spec files
    #
    ## Step 3: build packages with rpmbuild
    for spec in $(ls *.spec)
    do
        info "Building project according to ${spec}..."
    done
    ## Step 4: upload packages to repository
    #
    ## Step 5: clean project
    popd
}
